type Query {
    authUser: User
}

type Mutation {
    register(user: RegisterInput!): Auth!
    login(credentials: LoginInput!): Auth!
    addNote(note: AddNoteInput!): Note!
    editNote(noteId: String, edit: EditNoteInput!): Note!
    deleteNote(noteId: String!): [Note!]!
}

scalar Date

type User {
    _id: ID!
    name: String!
    email: String!
    password: String!
    lastLogin: Date
    createdAt: Date!
    updatedAt: Date!
    notes: [Note!]!
}

type Auth {
    token: String!
    user: User!
}

type Note {
    _id: ID!
    title: String!
    content: String!
    userId: String!
    user: User!
}

input RegisterInput {
    name: String!
    email: String!
    password: String!
}

input LoginInput {
    email: String!
    password: String!
}

input AddNoteInput {
    title: String!
    content: String!
    userId: String!
}

input EditNoteInput {
    title: String
    content: String
}
